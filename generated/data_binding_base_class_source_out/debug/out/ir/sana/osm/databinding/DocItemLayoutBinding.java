// Generated by view binder compiler. Do not edit!
package ir.sana.osm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ir.sana.osm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DocItemLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout docItemRelativeLayout1;

  @NonNull
  public final ImageView lrIvFileDividerIcon;

  @NonNull
  public final ImageView lrIvFileIcon;

  @NonNull
  public final TextView lrTvFileName;

  @NonNull
  public final TextView lrTvdate;

  private DocItemLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout docItemRelativeLayout1, @NonNull ImageView lrIvFileDividerIcon,
      @NonNull ImageView lrIvFileIcon, @NonNull TextView lrTvFileName, @NonNull TextView lrTvdate) {
    this.rootView = rootView;
    this.docItemRelativeLayout1 = docItemRelativeLayout1;
    this.lrIvFileDividerIcon = lrIvFileDividerIcon;
    this.lrIvFileIcon = lrIvFileIcon;
    this.lrTvFileName = lrTvFileName;
    this.lrTvdate = lrTvdate;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DocItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DocItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.doc_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DocItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout docItemRelativeLayout1 = (RelativeLayout) rootView;

      id = R.id.lr_ivFileDividerIcon;
      ImageView lrIvFileDividerIcon = ViewBindings.findChildViewById(rootView, id);
      if (lrIvFileDividerIcon == null) {
        break missingId;
      }

      id = R.id.lr_ivFileIcon;
      ImageView lrIvFileIcon = ViewBindings.findChildViewById(rootView, id);
      if (lrIvFileIcon == null) {
        break missingId;
      }

      id = R.id.lr_tvFileName;
      TextView lrTvFileName = ViewBindings.findChildViewById(rootView, id);
      if (lrTvFileName == null) {
        break missingId;
      }

      id = R.id.lr_tvdate;
      TextView lrTvdate = ViewBindings.findChildViewById(rootView, id);
      if (lrTvdate == null) {
        break missingId;
      }

      return new DocItemLayoutBinding((RelativeLayout) rootView, docItemRelativeLayout1,
          lrIvFileDividerIcon, lrIvFileIcon, lrTvFileName, lrTvdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

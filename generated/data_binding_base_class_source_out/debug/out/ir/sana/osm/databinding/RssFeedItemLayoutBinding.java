// Generated by view binder compiler. Do not edit!
package ir.sana.osm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ir.sana.osm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RssFeedItemLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView feedItemDescription;

  @NonNull
  public final TextView feedItemPubDate;

  @NonNull
  public final TextView feedItemTitle;

  @NonNull
  public final TextView feedItemType;

  private RssFeedItemLayoutBinding(@NonNull LinearLayout rootView, @NonNull CardView cardView,
      @NonNull TextView feedItemDescription, @NonNull TextView feedItemPubDate,
      @NonNull TextView feedItemTitle, @NonNull TextView feedItemType) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.feedItemDescription = feedItemDescription;
    this.feedItemPubDate = feedItemPubDate;
    this.feedItemTitle = feedItemTitle;
    this.feedItemType = feedItemType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RssFeedItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RssFeedItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rss_feed_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RssFeedItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.feed_item_description;
      TextView feedItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (feedItemDescription == null) {
        break missingId;
      }

      id = R.id.feed_item_pub_date;
      TextView feedItemPubDate = ViewBindings.findChildViewById(rootView, id);
      if (feedItemPubDate == null) {
        break missingId;
      }

      id = R.id.feed_item_title;
      TextView feedItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (feedItemTitle == null) {
        break missingId;
      }

      id = R.id.feed_item_type;
      TextView feedItemType = ViewBindings.findChildViewById(rootView, id);
      if (feedItemType == null) {
        break missingId;
      }

      return new RssFeedItemLayoutBinding((LinearLayout) rootView, cardView, feedItemDescription,
          feedItemPubDate, feedItemTitle, feedItemType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
